import Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.
port = String.to_integer(System.get_env("PORT") || "4000")

config :sakavault, SakaVaultWeb.Endpoint,
  http: [port: {:system, "PORT"}],
  url: [scheme: "https", host: "0.0.0.0", port: 443],
  force_ssl: [rewrite_on: [:x_forwarded_proto]],
  secret_key_base: {:system, "SECRET_KEY_BASE"},
  server: true,
  root: ".",
  check_origin: ["//*.herokuapp.com"],
  version: Application.spec(:sakavault, :vsn)

# Do not print debug messages in production
config :logger, level: :info

database_ssl = {:system, "DATABASE_SSL", nil} == nil

config :sakavault, SakaVault.Repo,
  ssl: database_ssl,
  url: {:system, "DATABASE_URL"},
  pool_size: {:system, "POOL_SIZE", 10}

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :sakavault, SakaVaultWeb.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH"),
#         transport_options: [socket_opts: [:inet6]]
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :sakavault, SakaVaultWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# Finally import the config/prod.secret.exs which loads secrets
# and configuration from environment variables.
# import_config "prod.secret.exs"
